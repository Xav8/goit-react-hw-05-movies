{"version":3,"file":"static/js/399.79adcfbd.chunk.js","mappings":"+MACA,SAAiB,E,aCMjB,MAyCA,EAzCaA,KACX,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAiB3C,OAfAG,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACEF,GAAa,GACb,MAAMG,QAAaC,EAAAA,EAAAA,MACnBP,EAAU,IAAIM,EAAKE,SAKrB,CAJE,MAAOC,GACPC,QAAQC,IAAI,QAASF,EAAMG,QAC7B,CAAC,QACCT,GAAa,EACf,GAEFU,EAAW,GACV,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGd,IACCe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CACRC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAI3DT,EAAAA,EAAAA,KAAA,MAAIU,UAAWC,EAAAA,MAAUZ,SAAC,oBAE1BC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAAC9B,OAAQA,MACnB,C,iCC3CP,QAAkC,gC,aCE3B,MAAMmB,EAASY,IAAmB,IAAlB,SAAEd,GAAUc,EACjC,OAAOb,EAAAA,EAAAA,KAAA,OAAKU,UAAWI,EAAuBf,SAAEA,GAAe,C,sDCHjE,QAA6B,+BAA7B,EAAiE,uBAAjE,EAA6F,uBAA7F,EAA6H,2BAA7H,EAAqK,+B,aCG9J,MAAMa,EAAaC,IAAiB,IAAhB,OAAE/B,GAAQ+B,EACnC,MAAME,GAAWC,EAAAA,EAAAA,MAIjB,OACEhB,EAAAA,EAAAA,KAAA,MAAIU,UAAWI,EAAUf,SACtBjB,EAAOmC,KAAIC,IACVlB,EAAAA,EAAAA,KAAA,MAAIU,UAAWI,EAAUf,UACvBF,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CACHT,UAAWI,EACXM,GAAE,WAAAC,OAAaH,EAAMI,IACrBC,MAAO,CAAEC,KAAMT,GAAWhB,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,OACEU,UAAWI,EACXW,IACEP,EAAMQ,YAAW,kCAAAL,OACqBH,EAAMQ,aAflC,+CAkBZC,IAAKT,EAAMU,SAEb5B,EAAAA,EAAAA,KAAA,KAAGU,UAAWI,EAAkBf,SAAEmB,EAAMU,YAfbV,EAAMI,OAmBpC,C","sources":["webpack://goit-react-hw-05-movies/./src/Pages/Home.module.css?777d","Pages/Home.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from 'react';\nimport { fetchTrends } from '../components/Services/ApiMovies';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Loader } from '../components/Loader/Loader';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrends();\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <h1 className={css.Title}>Tranding Today</h1>\n\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderContainer\":\"Loader_LoaderContainer__Ke+vb\"};","import PropTypes from 'prop-types';\nimport styles from './Loader.module.css';\n\nexport const Loader = ({ children }) => {\n  return <div className={styles.LoaderContainer}>{children}</div>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"StyledLink\":\"MoviesList_StyledLink__P+Y+F\",\"Ul\":\"MoviesList_Ul__CNRlP\",\"Li\":\"MoviesList_Li__HOVtT\",\"Poster\":\"MoviesList_Poster__VFpM0\",\"MovieTitle\":\"MoviesList_MovieTitle__GiMs2\",\"P\":\"MoviesList_P__cqorR\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const defaultMovieImg = 'https://i.ibb.co/Vq9rRZk/no-image-meme-2.png';\n\n  return (\n    <ul className={styles.Ul}>\n      {movies.map(movie => (\n        <li className={styles.Li} key={movie.id}>\n          <Link\n            className={styles.StyledLink}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={styles.Poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <p className={styles.MovieTitle}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n"],"names":["Home","movies","setMovies","useState","isLoading","setIsLoading","useEffect","async","data","fetchTrends","results","error","console","log","message","fetchData","_jsxs","_Fragment","children","_jsx","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","className","css","MoviesList","_ref","styles","location","useLocation","map","movie","Link","to","concat","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}