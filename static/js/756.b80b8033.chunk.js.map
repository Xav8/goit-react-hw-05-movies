{"version":3,"file":"static/js/756.b80b8033.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails.module.css?40ae","Pages/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieContainer\":\"MovieDetails_MovieContainer__kkdRV\",\"BackLink\":\"MovieDetails_BackLink__XkifV\",\"LinkInfo\":\"MovieDetails_LinkInfo__kcMKH\",\"List\":\"MovieDetails_List__xGgfq\",\"Img\":\"MovieDetails_Img__xwG1+\",\"ImgWrp\":\"MovieDetails_ImgWrp__goMyC\",\"InfoWrp\":\"MovieDetails_InfoWrp__tK0UN\",\"AdditionalWrp\":\"MovieDetails_AdditionalWrp__XdW4J\"};","import { useRef, useEffect, useState } from 'react';\nimport { fetchMovie } from '../components/Services/ApiMovies';\nimport { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Loader } from '../components/Loader/Loader';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <Link to={backLinkLocationRef.current} className={styles.BackLink}>\n        {' '}\n        â†© Go back\n      </Link>\n      <div className={styles.MovieContainer}>\n        <div className={styles.ImgWrp}>\n          <img\n            className={styles.Img}\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : defaultMovieImg\n            }\n            alt={movie.title}\n          />\n        </div>\n        <div className={styles.InfoWrp}>\n          <h1>{movie.title}</h1>\n          <p>\n            User scores: <b>{Math.round(movie.vote_average * 10)}%</b>\n          </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <div className={styles.AdditionalWrp}>\n        <h3>Additional information</h3>\n        <div className={styles.List}>\n          <li>\n            <Link to={`/movies/${movieId}/cast`} className={styles.LinkInfo}>\n              {' '}\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`} className={styles.LinkInfo}>\n              Reviews\n            </Link>\n          </li>\n        </div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderContainer\":\"Loader_LoaderContainer__Ke+vb\"};","import PropTypes from 'prop-types';\nimport styles from './Loader.module.css';\n\nexport const Loader = ({ children }) => {\n  return <div className={styles.LoaderContainer}>{children}</div>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"names":["MovieDetails","_location$state$from","_location$state","_movie$genres","movie","setMovie","useState","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","async","data","fetchMovie","error","console","log","message","fetchData","_jsxs","_Fragment","children","_jsx","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Link","to","current","className","styles","src","poster_path","concat","alt","title","Math","round","vote_average","overview","genres","map","_ref","name","join","Outlet"],"sourceRoot":""}